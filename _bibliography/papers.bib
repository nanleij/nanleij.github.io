---
---

@unpublished{dLLdMK24,
	title={Optimality and uniqueness of the D_4 root system}, 
	author={David {de Laat} and Nando Leijenhorst and Willem H. H. {de Muinck Keizer}},
	url = {http://arxiv.org/abs/2404.18794},
	publisher = {arXiv},
	abbr = {Preprint},
	month={april},
	year={2024},
	arXiv={2404.18794},
	bibtex_show = {true},
    selected = {true},
	keywords = {Mathematics - Metric Geometry},
}

@unpublished{CdLL24,
	title={Optimality of spherical codes via exact semidefinite programming bounds}, 
	author={Henry Cohn and David {de Laat} and Nando Leijenhorst},
	url = {http://arxiv.org/abs/2403.16874},
	publisher = {arXiv},
	abbr = {Preprint},
	month={mar},
	year={2024},
	arXiv={2403.16874},
	bibtex_show = {true},
    selected = {true},
	keywords = {Mathematics - Metric Geometry},
}

@article{goncalves_multiplicity_2023,
	title = {Multiplicity of nontrivial zeros of primitive {L}-functions via higher-level correlations},
	copyright = {All rights reserved},
	url = {http://arxiv.org/abs/2303.01095},
	doi = {10.1090/mcom/4005},
	abstract = {We give universal bounds on the fraction of nontrivial zeros having given multiplicity for L-functions attached to a cuspidal automorphic representation of \${\textbackslash}mathrm\{GL\}\_m/{\textbackslash}mathbb\{Q\}\$. For this, we apply the higher-level correlation asymptotic of Hejhal and Rudnick \& Sarnak in conjunction with semidefinite programming bounds.},
	publisher = {American Mathematical Society},
	journal = {Mathematics of Computations},
	author = {Felipe Gonçalves and David {de Laat} and Nando Leijenhorst},
    abbr = {Article},
	month = {aug},
	year = {2024},
    bibtex_show = {true},
	arXiv = {2303.01095},
	keywords = {Mathematics - Optimization and Control, Mathematics - Number Theory},
	doi = {10.1090/mcom/4005}
}

@article{leijenhorst_solving_2022,
	title = {Solving clustered low-rank semidefinite programs arising from polynomial optimization},
	copyright = {All rights reserved},
	url = {http://arxiv.org/abs/2202.12077},
	abstract = {We study a primal-dual interior point method specialized to clustered low-rank semidefinite programs requiring high precision numerics, which arise from certain multivariate polynomial (matrix) programs through sums-of-squares characterizations and sampling. We consider the interplay of sampling and symmetry reduction as well as a greedy method to obtain numerically good bases and sample points. We apply this to the computation of three-point bounds for the kissing number problem, for which we show a significant speedup. This allows for the computation of improved kissing number bounds in dimensions $11$ through $23$. The approach performs well for problems with bad numerical conditioning, which we show through new computations for the binary sphere packing problem.},
	author = {Nando Leijenhorst and David {de Laat}},
    abbr = {Math. Prog. Comp.},
    doi ={10.1007/s12532-024-00264-w},
	month = {sep},
	year = {2024},
    selected = {false},
	arXiv = {2202.12077},
    bibtex_show = {true},
	keywords = {Mathematics - Metric Geometry, Mathematics - Optimization and Control},
}



@thesis{leijenhorst_solver_2021,
	title={A solver for clustered low-rank SDPs arising from multivariate polynomial (matrix) programs (MSc thesis)},
	author={Nando Leijenhorst},
	url={http://resolver.tudelft.nl/uuid:53e114a8-61cd-4f48-8151-76abb0159408},
	bibtex_show = {true},
	year = {2021},
	month={june},
	abbr={Thesis},
	type={Master's Thesis},
	abstract={In this thesis, we give a primal-dual interior point method specialized to clustered low-rank semidefinite programs. We introduce multivariate polynomial matrix programs, and we reduce these to clustered low-rank semidefinite programs. This extends the work of Simmons-Duffin [J. High Energ. Phys. 1506, no. 174 (2015)] from univariate to multivariate polynomial matrix programs, and to more general clustered low-rank semidefinite programs.  Clustered low-rank semidefinite programs are programs with low-rank constraint matrices where the positive semidefinite variables are only used within clusters of constraints. The free variables can be used in any constraint, and can be used to connect clusters. The solver uses this structure to speed up the computations in two ways. First, the low rank structure is used to reduce matrix products to products of the form uT M v, where M is a matrix and u and v are vectors, as already suggested by Löfberg and Parrilo in [43rd IEEE CDC (2004)]. Second, an additional block-diagonal structure is introduced due to the clusters. This gives the possibility to do operations such as the Cholesky decomposition block-wise.   We apply this to sphere packing and spherical cap packing. For sphere packing, the speed of the solver is compared to the often used arbitrary precision solver SDPA-GMP, showing the theoretical speedup in time complexity. We give a new three-point bound for the maximum density when packing spherical caps of $N$ sizes on the unit sphere.},
	supervisor = {David {de Laat}},
	committee = {Dion Gijswijt and Jacob {van der Woude}}
}

@thesis{leijenhorst_quantum_2019,
	title={Quantum Error Correction: Decoders for the Toric Code (BSc thesis)},
	author={Nando Leijenhorst},
	url={http://resolver.tudelft.nl/uuid:94823249-e114-4fc0-bae9-4c80d503296f},
	bibtex_show = {true},
	year = {2019},
	abbr={Thesis},
	month = {aug},
	type={Bachelor's Thesis},
	abstract={Quantum error correction is needed for future quantum computers. Classical error correcting codes are not suitable for this due to the nature of quantum mechanics. Therefore, new codes need to be developed. A promising candidate is the toric code, a surface code, because of its locality and its high error correcting capability and thresholds (the error probability below which increasing the size of the code decreases the failure rate). This thesis provides an introduction to quantum error correction and the stabilizer formalism, which is used to introduce the toric code. Several decoders are looked at, including the Minimum Weight Perfect Matching (MWPM) decoder and a recently developed decoder, the Union-Find (UF) decoder. The UF decoder is useful because of its almost-linear time complexity, while only reducing the threshold by a marginal amount compared to the MWPM decoder. In this thesis, the time complexity of the weighted growth version of the UF decoder is analysed. The toric code and the decoders have been implemented and simulated, and the thresholds have been determined. For the MWPM decoder, the threshold was determined to be 11.5±0.2%, which is not in agreement with the threshold in literature of 10.3%, and should not be possible according to the optimal threshold of about 11%. This probably is a result of the low grid sizes (up to a gridsize of 11) of the code used due to the time needed to simulate the MWPM decoder. For the UF decoder, the threshold found was 9.7 ± 0.9%, which is in agreement with the threshold of 9.9% found by N. Delfosse and N. Nickerson. The time complexity of the UF decoder has also been determined, and is indeed almost-linear as expected by the analysis.},
	supervisor = {Martijn Caspers and David Elkouss Coronas},
	committee = {Wioletta Ruszel and Miriam Blaauboer}
}
